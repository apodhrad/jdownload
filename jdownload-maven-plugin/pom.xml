<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apodhrad.jdownload</groupId>
    <artifactId>jdownload-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>jdownload-maven-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <name>.: JDownload Maven Plugin :.</name>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>3.0.5</version>
    </dependency>
    <!-- dependencies to annotations -->
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>3.2</version>
      <!-- annotations are not needed for plugin execution so you can remove 
	   this dependency for execution with using provided scope -->
      <scope>provided</scope>
    </dependency>
    <!-- generated help mojo has a dependency to plexus-utils -->
    <dependency>
      <groupId>org.twdata.maven</groupId>
      <artifactId>mojo-executor</artifactId>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apodhrad.jdownload</groupId>
      <artifactId>jdownload-manager</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-invoker</artifactId>
      <version>2.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <plugin>
	<artifactId>maven-plugin-plugin</artifactId>
	<configuration>
	  <!-- see http://jira.codehaus.org/browse/MNG-5346 -->
	  <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
	</configuration>
	<executions>
	  <execution>
	    <id>mojo-descriptor</id>
	    <goals>
	      <goal>descriptor</goal>
	    </goals>
	  </execution>
	  <!-- if you want to generate help goal -->
	  <execution>
	    <id>help-goal</id>
	    <goals>
	      <goal>helpmojo</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
	  <execution>
	    <id>attach-sources</id>
	    <goals>
              <goal>jar</goal>
	    </goals>
	  </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
	  <execution>
	    <id>attach-javadocs</id>
	    <goals>
              <goal>jar</goal>
	    </goals>
	  </execution>
        </executions>
      </plugin>
       <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <configuration>
       <!-- Skip the default running of this plug-in (or everything is run twice...see below) -->
       <skip>true</skip>
          <systemPropertyVariables>
            <maven.home>${maven.home}</maven.home>
	    <project.build.directory>${project.build.directory}</project.build.directory>
	    <org.slf4j.simpleLogger.defaultLogLevel>debug</org.slf4j.simpleLogger.defaultLogLevel>
	    <jdownload.version>${project.version}</jdownload.version>
          </systemPropertyVariables>
    </configuration>
    <executions>
       <execution>
          <id>unit-tests</id>
          <phase>test</phase>
          <goals>
             <goal>test</goal>
          </goals>
          <configuration>
                <!-- Never skip running the tests when the test phase is invoked -->
                <skip>false</skip>
             <includes>
                   <!-- Include unit tests within integration-test phase. -->
                <include>**/*Test.java</include>
             </includes>
             <excludes>
               <!-- Exclude integration tests within (unit) test phase. -->
                <exclude>**/*IntegrationTest.java</exclude>
            </excludes>
          </configuration>
       </execution>
       <execution>
          <id>integration-tests</id>
          <phase>integration-test</phase>
          <goals>
             <goal>test</goal>
          </goals>
          <configuration>
            <!-- Never skip running the tests when the integration-test phase is invoked -->
             <skip>false</skip>
             <includes>
               <!-- Include integration tests within integration-test phase. -->
               <include>**/*IntegrationTest.java</include>
             </includes>
          </configuration>
       </execution>
    </executions>
  </plugin>
    </plugins>
  </build>

</project>
